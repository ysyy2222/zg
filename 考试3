# -*- coding: utf-8 -*-
"""
Created on Wed Jul 29 13:18:50 2020

@author: ZhengGe
"""


# 使用KMeans进行聚类
from sklearn.cluster import KMeans
from sklearn import preprocessing
import pandas as pd
import numpy as np

# 数据加载
data = pd.read_csv('C:/Users/zhengge/Desktop/sj/kaoshi/数据分析训练营-结营考试/ProjectC/CarPrice_Assignment.csv',encoding="gbk")
train_x = data[["car_ID","symboling","CarName","fueltype","aspiration"	,"doornumber","carbody","drivewheel","enginelocation","wheelbase","carlength","carwidth","carheight","curbweight","enginetype","cylindernumber","enginesize","fuelsystem","boreratio","stroke","compressionratio","horsepower","peakrpm","citympg","highwaympg","price"]]
print(train_x.shape)

from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()
lists=["CarName","fueltype","aspiration","doornumber","carbody","drivewheel","enginelocation","enginetype","cylindernumber","fuelsystem"]
for column in lists:
    train_x[column]=le.fit_transform(train_x[column])


# 规范化到 [0,1] 空间
min_max_scaler=preprocessing.MinMaxScaler()
train_x=min_max_scaler.fit_transform(train_x)
pd.DataFrame(train_x).to_csv('car_data1.csv', index=False)
#print(train_x)



kmeans = KMeans(n_clusters=10)
kmeans.fit(train_x)
predict_y = kmeans.predict(train_x)
# 合并聚类结果，插入到原数据中
result = pd.concat((data,pd.DataFrame(predict_y)),axis=1)
result.rename({0:u'聚类结果'},axis=1,inplace=True)
print(result)
# 将结果导出到CSV文件中
result.to_csv("car_data2.csv",index=False,encoding="gbk")
